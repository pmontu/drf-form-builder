{"version":3,"sources":["components/Login.js","components/Forms.js","components/Design.js","components/Reply.js","components/View.js","App.js","serviceWorker.js","index.js"],"names":["Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","handleChange","bind","assertThisInitialized","handleSubmit","event","_event$target","target","name","value","setState","defineProperty","preventDefault","props","onSubmit","react_default","a","createElement","className","type","required","placeholder","onChange","React","Component","CreateForm","onCreateForm","objectSpread","description","Forms","_this2","forms_components","forms","map","form","design","fill","userId","user","onClick","onDesign","onFillInit","key","id","attempt_components","attempts","attempt","view","onReply","onView","form_author","form_name","title","length","Forms_CreateForm","onFormCreate","TextInputForm","text","isText","fieldType","checked","prevState","htmlFor","Option","_this3","_event$target2","fieldId","field","options","opt","Design","_this4","_event$target3","components","_this5","fields","Design_Option","args","onOptionSubmit","Error","err","alert","Design_TextInputForm","onTextSubmit","TextField","attField","ChoiceField","selOptIds","selOptions","option","isChecked","includes","selOptionId","find","selOpt","Reply","onTextChange","optionId","attFieldId","onRadioChange","styles","answer","textDecoration","fontStyle","View","style","selectedOptions","concat","App","isLoggedIn","baseUrl","isDesign","isReply","isView","isForms","handleLogin","handleLogout","getForms","handleDesign","handleReply","handleView","handleForms","handleTextAttemptChange","handleRadioAttemptChange","handleDesignTextSubmit","handleDesignOptionSubmit","handleFillInit","handleFormCreate","loginUrl","fetch","method","body","JSON","stringify","headers","Content-Type","then","r","ok","json","d","token","catch","e","formsUrl","response","_context","t0","attemptsUrl","Authorization","t1","field_attempt","textFieldDetailUrl","data","_context2","attemptId","attOptListUrl","newOpts","push","attOptDetailUrl","filter","attOpt","_context3","formId","postFieldUrl","newFields","_context4","postOptUrl","newOptions","_context5","postAttempt","newAttempts","_context6","params","postForm","newForms","_context7","components_Login","components_Forms","onLoad","components_Design","components_Reply","components_View","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f20dfd5a.chunk.js","sourcesContent":["import React from 'react'\nimport 'bulma/css/bulma.css'\n\n\nclass Login extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"puru\",\n            password: \"1\",\n\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSubmit(this.state)\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <h3 className=\"title\">Login</h3>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label className=\"label\">Username</label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    required={true}\n                                    name=\"username\"\n                                    placeholder=\"Username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"label\">Password</label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"password\"\n                                    required={true}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field is-grouped\">\n                            <div className=\"control\">\n                                <button className=\"button is-small is-link\">Submit</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport 'bulma/css/bulma.css'\n\n\nclass CreateForm extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tname: \"\"\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t}\n\n\thandleChange(event) {\n\t\tconst {name, value} = event.target\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault()\n\t\tthis.props.onCreateForm({ ...this.state })\n\t}\n\n\trender() {\n\t\treturn (\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <h3 className=\"title\">Create New Form</h3>\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t<label className=\"label\">Name</label>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<input\n                                    className=\"input\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Form Title\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t<label className=\"label\">Message</label>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tclassName=\"textarea\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"field is-grouped\">\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<button className=\"button is-link\">Create</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n                </div>\n            </div>\n\t\t)\n\t}\n}\n\n\nclass Forms extends React.Component {\n\trender() {\n\t\tconst forms_components = this.props.forms.map(form => {\n\t\t\tlet design, username = \"Me\", fill\n\t\t\tif(this.props.userId === form.user) {\n\t\t\t\tdesign = <button\n\t\t\t\t\tonClick={() => this.props.onDesign(form)}\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t>\n\t\t\t\t\tDesign\n\t\t\t\t</button>\n\t\t\t\tfill = \"N.A.\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\tusername = form.username\n\t\t\t\tfill = <button\n\t\t\t\t\tonClick={() => this.props.onFillInit(form)}\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t>Fill</button>\n\t\t\t\tdesign = \"N.A.\"\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<tr key={form.id}>\n\t\t\t\t\t<th>{form.id}</th>\n\t\t\t\t\t<td>{username}</td>\n\t\t\t\t\t<td>{form.name}</td>\n\t\t\t\t\t<td>{design}</td>\n\t\t\t\t\t<td>{fill}</td>\n\t\t\t\t\t<td>{form.description}</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t})\n\n\t\tconst attempt_components = this.props.attempts.map(attempt => {\n\t\t\tlet fill, username, view\n\t\t\tif(attempt.user === this.props.userId) {\n\t\t\t\tfill = <button onClick={() => this.props.onReply(attempt)} className=\"button\">\n\t\t\t\t\tFill\n\t\t\t\t</button>\n\t\t\t\tview = \"N.A.\"\n\t\t\t\tusername = \"Me\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\tview = <button onClick={() => this.props.onView(attempt)} className=\"button\">\n\t\t\t\t\tView\n\t\t\t\t</button>\n\t\t\t\tusername = attempt.username\n\t\t\t\tfill = \"N.A.\"\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<tr key={attempt.id}>\n\t\t\t\t\t<th>{attempt.id}</th>\n\t\t\t\t\t<td>{username}</td>\n\t\t\t\t\t<td>{attempt.form_author}</td>\n\t\t\t\t\t<td>{attempt.form_name}</td>\n\t\t\t\t\t<td>{fill}</td>\n\t\t\t\t\t<td>{view}</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t})\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<header className=\"card-header\">\n\t\t\t\t\t\t<p className=\"card-header-title\">\n\t\t\t\t\t\t\tForms\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th><abbr title=\"Unique Identifier\">Id</abbr></th>\n\t\t\t\t\t\t\t\t\t\t<th>Author</th>\n\t\t\t\t\t\t\t\t\t\t<th><abbr title=\"Form Title\">Form Title</abbr></th>\n\t\t\t\t\t\t\t\t\t\t<th><abbr title=\"Add Elements to Form\">Design</abbr></th>\n\t\t\t\t\t\t\t\t\t\t<th><abbr title=\"Fill the Form\">Create New Submission</abbr></th>\n\t\t\t\t\t\t\t\t\t\t<th><abbr title=\"Fill the Form\">Description</abbr></th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{forms_components}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t\t\t{!forms_components ? <tr><th>{\"Loading...\"}</th></tr> : null}\n\t\t\t\t\t\t\t\t\t{forms_components.length === 0 ? <tr><th>{\"No Records\"}</th></tr> : null}\n\t\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<CreateForm onCreateForm={this.props.onFormCreate} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<header className=\"card-header\">\n\t\t\t\t\t\t<p className=\"card-header-title\">\n\t\t\t\t\t\t\tSubmissions\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th><abbr title=\"Unique Identifier\">Id</abbr></th>\n\t\t\t\t\t\t\t\t\t\t<th>User</th>\n\t\t\t\t\t\t\t\t\t\t<th>Form Author</th>\n\t\t\t\t\t\t\t\t\t\t<th>Form Title</th>\n\t\t\t\t\t\t\t\t\t\t<th>Continue Filling</th>\n\t\t\t\t\t\t\t\t\t\t<th>View</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{attempt_components}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t\t\t{!attempt_components ? <tr><th>{\"Loading...\"}</th></tr> : null}\n\t\t\t\t\t\t\t\t\t{attempt_components.length === 0 ? <tr><th>{\"No Records\"}</th></tr> : null}\n\t\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Forms","import React from 'react'\nimport 'bulma/css/bulma.css'\nimport 'bulma-extensions/dist/css/bulma-extensions.min.css'\n\n\nclass TextInputForm extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            text: \"\",\n            isText: true\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSubmit({\n            text: this.state.text,\n            fieldType: this.state.isText ? \"T\" : \"R\"\n        })\n        this.setState({ text: \"\" })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"field\">\n                    <input\n                        id=\"switchRoundedInfo\"\n                        type=\"checkbox\"\n                        name=\"switchRoundedInfo\"\n                        className=\"switch is-rounded is-info\"\n                        checked={this.state.isText}\n                        onChange={() => this.setState(prevState=>({isText: !prevState.isText}))}\n                    />\n                    <label htmlFor=\"switchRoundedInfo\">\n                        {this.state.isText ? \"Switch to Checkbox\" : \"Switch to Textbox\"}\n                    </label>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">{this.state.isText ? \"Text\" : \"Choice\"} Question</label>\n                    <div className=\"control\">\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            placeholder=\"Question Text\"\n                            value={this.state.text}\n                            name=\"text\"\n                            onChange={this.handleChange}\n                            required={true}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button className=\"button is-link\">Add</button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\n\nclass Option extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            value: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        const {value, name} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSubmit({\n            event: event,\n            fieldId: this.props.field.id,\n            value: this.state.value\n        })\n        this.setState({ value: \"\"})\n    }\n\n    render() {\n        const options = this.props.options.map(opt => <li key={opt.id}>{opt.value} </li>)\n        return (\n            <li>\n                <form onSubmit={this.handleSubmit}>\n                    Choice Question:\n                    <label>\n                        <strong>{this.props.field.text}</strong>\n                        <br />\n\n                        <ul>\n                            {options}\n                        </ul>\n                        {options.length === 0 ? \"No options added yet\" : null}\n\n                        <div className=\"field\">\n                            <label className=\"label\">Option</label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"Choice\"\n                                    value={this.state.value}\n                                    name=\"value\"\n                                    onChange={this.handleChange}\n                                    required={true}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field is-grouped\">\n                            <div className=\"control\">\n                                <button className=\"button is-small is-link\">Add</button>\n                            </div>\n                        </div>\n                    </label>\n                </form>\n            </li>\n        )\n    }\n}\n\nclass Design extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            text: \"\",\n            isText: true\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        const {value, name} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render() {\n        let components\n        try {\n            components = this.props.form.fields.map(field => {\n                if(field.field === \"T\")\n                    return <li key={field.id}>Text Question: <strong>{field.text}</strong></li>\n                else if(field.field === \"R\")\n                    return <Option\n                        key={field.id}\n                        options={field.options}\n                        field={field}\n                        onSubmit={\n                            (args) => {\n                                args[\"formId\"] = this.props.form.id\n                                this.props.onOptionSubmit(args)\n                            }\n                        }\n                    />\n                else\n                    throw new Error(\"Unexpted field type in Design Form Rendering\")\n            })\n        }\n        catch(err) {\n            alert(err)\n        }\n\n        return (\n            <div>\n                <div className=\"card\">\n                    <header className=\"card-header\">\n                        <p className=\"card-header-title\">\n                            Design Form: <strong>{this.props.form.name}</strong>\n                        </p>\n                    </header>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <ol>\n                                {components}\n                            </ol>\n                            {components.length === 0 ? \"Add Textboxes or Checkboxes to continue\" : null}\n                            <br />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card\">\n                    <header className=\"card-header\">\n                        <p className=\"card-header-title\">\n                            Create New Field / Question\n                        </p>\n                    </header>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <TextInputForm\n                                onSubmit={\n                                    (args) => {\n                                        args[\"formId\"] = this.props.form.id\n                                        this.props.onTextSubmit(args)\n                                    }\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Design","import React from \"react\"\n\n\nfunction TextField(props) {\n\treturn (\n        <div className=\"field\">\n            <label className=\"label\">{props.attField.field.text}: </label>\n            <div className=\"control\">\n    \t\t\t<input\n                    className=\"input\"\n    \t\t\t\ttype=\"text\"\n    \t\t\t\tname={props.attField.field.text}\n    \t\t\t\tplaceholder=\"Answer\"\n    \t\t\t\tonChange={(event) => props.onChange(event, props.attField)}\n    \t\t\t\tvalue={props.attField.text}\n    \t\t\t/>\n            </div>\n        </div>\n\t)\n}\n\nfunction ChoiceField(props) {\n\tconst selOptIds = props.attField.options.map(selOptions => selOptions.option)\n\tconst options = props.attField.field.options.map(option => {\n\t\tconst isChecked = selOptIds.includes(option.id)\n\t\tconst selOptionId = isChecked ? props.attField.options.find(selOpt=>selOpt.option===option.id).id : null\n\t\treturn (\n            <div className=\"field\" key={option.id}>\n                <div className=\"control\">\n                    <label className=\"checkbox\">\n                        <input\n                            type=\"checkbox\"\n                            checked={isChecked}\n                            onChange={(event) => props.onChange(event, option.id, selOptionId, props.attField.id)}\n                        />\n                        {option.value}\n                    </label>\n                </div>\n            </div>\n        )\n\t})\n\treturn (\n\t\t<div>\n\t\t\t<strong>{props.attField.field.text}:</strong> {options}\n\t\t</div>\n\t)\n}\n\n\nclass Reply extends React.Component {\n\trender() {\n\t\tlet components\n\t\ttry {\n\t\t\tcomponents = this.props.attempt.fields.map(attField => {\n\t\t\t\tif(attField.field.field === \"T\") {\n\t\t\t\t\treturn <li key={attField.id}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tattField={attField}\n\t\t\t\t\t\t\tonChange={this.props.onTextChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t}\n\t\t\t\telse if(attField.field.field === \"R\")\n\t\t\t\t\treturn <li key={attField.id}>\n\t\t\t\t\t\t<ChoiceField attField={attField} onChange={\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\toptionId,\n\t\t\t\t\t\t\t\tselOptionId,\n\t\t\t\t\t\t\t\tattFieldId\n\t\t\t\t\t\t\t) => this.props.onRadioChange(\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\toptionId,\n\t\t\t\t\t\t\t\tselOptionId,\n\t\t\t\t\t\t\t\tattFieldId,\n\t\t\t\t\t\t\t\tthis.props.attempt.id\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}/>\n\t\t\t\t\t</li>\n\t\t\t\telse\n\t\t\t\t\tthrow new Error(\"Unknown field type.\")\n\t\t\t})\n\t\t}\n\t\tcatch(err) {\n\t\t\talert(err)\n\t\t}\n\t\treturn (\n\t\t\t<div>\n                <div className=\"card\">\n                    <header className=\"card-header\">\n                        <p className=\"card-header-title\">\n                            Fill Form <strong>{this.props.attempt.form_name}</strong>\n                        </p>\n                    </header>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <form>\n                                <ol>\n                                    {components}\n                                </ol>\n                                {components.length === 0 ? \"No Fields have been added to this form\" : null}\n                                <br />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Reply","import React from 'react'\n\nconst styles = {\n    \"answer\": {\n        textDecoration: \"underline\",\n        fontStyle: \"italic\"\n    }\n}\n\nclass View extends React.Component {\n    render() {\n        let components\n        try {\n            components = this.props.attempt.fields.map(attField => {\n                if(attField.field.field===\"T\")\n                    return <li key={attField.id}>Text Question - <strong>{attField.field.text}</strong>: <span style={styles.answer}>{attField.text || \"No Answer\"}</span></li>\n\n                else if(attField.field.field===\"R\") {\n                    const selectedOptions = attField.options.map(selOpt => <li key={selOpt.id}><span style={styles.answer}>{selOpt.value}</span></li>)\n                    return (\n                        <li key={attField.id}>\n                            Choice Question - <strong>{attField.field.text}</strong>\n                            <br />\n                            Options Selected:\n                            <ul>\n                                {selectedOptions}\n                                {selectedOptions.length === 0 ? <li style={styles.answer}>No options selected</li> : null}\n                            </ul>\n\n                        </li>\n                    )\n                }\n                else\n                    throw new Error(\"Unknown field type while rending View Form.\")\n\n            })\n        }\n        catch(err) {\n            alert(err)\n        }\n        return (\n            <div>\n                <div className=\"card\">\n                    <header className=\"card-header\">\n                        <p className=\"card-header-title\">\n                            {`View ${this.props.attempt.username}'s ${this.props.attempt.form_name} Form`}\n                        </p>\n                    </header>\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <ol>\n                                {components}\n                            </ol>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default View","import React, { Component } from 'react'\nimport './App.css'\nimport 'bulma/css/bulma.css'\n\nimport Login from './components/Login'\nimport Forms from './components/Forms'\nimport Design from './components/Design'\nimport Reply from './components/Reply'\nimport View from './components/View'\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            isLoggedIn: false,\n            baseUrl: \"\",\n            isDesign: false,\n            isReply: false,\n            isView: false,\n            isForms: true,\n            forms: [],\n            attempts: []\n        }\n\n        this.handleLogin = this.handleLogin.bind(this)\n        this.handleLogout = this.handleLogout.bind(this)\n        this.getForms = this.getForms.bind(this)\n        this.handleDesign = this.handleDesign.bind(this)\n        this.handleReply = this.handleReply.bind(this)\n        this.handleView = this.handleView.bind(this)\n        this.handleForms = this.handleForms.bind(this)\n        this.handleTextAttemptChange = this.handleTextAttemptChange.bind(this)\n        this.handleRadioAttemptChange = this.handleRadioAttemptChange.bind(this)\n        this.handleDesignTextSubmit = this.handleDesignTextSubmit.bind(this)\n        this.handleDesignOptionSubmit = this.handleDesignOptionSubmit.bind(this)\n        this.handleFillInit = this.handleFillInit.bind(this)\n        this.handleFormCreate = this.handleFormCreate.bind(this)\n    }\n\n    handleLogin(user) {\n        const loginUrl = `${this.state.baseUrl}/api-token-auth/`\n        fetch(loginUrl, {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\"Content-Type\": \"application/json\"}\n        })\n            .then(r => {\n                if(r.ok)\n                    return r.json()\n                throw new Error(\"Something went wrong.\")\n            })\n            .then(d => {\n                this.setState({\n                    username: user.username,\n                    token: d.token,\n                    isLoggedIn: true,\n                    user: {id: d.user.id}\n                })\n                this.getForms()\n            })\n            .catch(e => {\n                alert(e)\n                this.setState({ isLoggedIn: false })\n            })\n    }\n\n    handleLogout() {\n        this.setState({\n            isLoggedIn: false,\n            isDesign: false,\n            isReply: false,\n            isView: false,\n            isForms: false\n        })\n    }\n\n    async getForms() {\n        let forms = []\n\n        try {\n            const formsUrl = `${this.state.baseUrl}/forms/`\n            const response = await fetch(formsUrl)\n            if(response.ok)\n                forms = await response.json()\n            else\n                throw new Error(\"Something went wrong.\")\n        }\n\n        catch(err) {\n            alert(err)\n        }\n\n\n        let attempts = []\n\n        try {\n            const attemptsUrl = `${this.state.baseUrl}/attempts/`\n            const response = await fetch(attemptsUrl, {\n                headers: {\"Authorization\": `JWT ${this.state.token}`}\n            })\n            if(response.ok)\n                attempts = await response.json()\n            else\n                throw new Error(\"Something went wrong.\")\n        }\n\n        catch(err) {\n            alert(err)\n        }\n        this.setState({ forms: forms, attempts: attempts, isForms: true })\n    }\n\n    handleDesign(form) {\n        this.setState({\n            form: form,\n            isDesign: true,\n            isReply: false,\n            isView: false,\n            isForms: false\n        })\n    }\n\n    handleReply(attempt) {\n        this.setState({\n            attempt: attempt,\n            isDesign: false,\n            isReply: true,\n            isView: false,\n            isForms: false\n        })\n    }\n\n    handleView(attempt) {\n        this.setState({\n            attempt: attempt,\n            isDesign: false,\n            isReply: false,\n            isView: true,\n            isForms: false\n        })\n    }\n\n    handleForms(attempt) {\n        this.setState({\n            attempt: attempt,\n            isDesign: false,\n            isReply: false,\n            isView: false,\n            isForms: true\n        })\n    }\n\n    async handleTextAttemptChange(event, field_attempt) {\n        const textFieldDetailUrl = `${this.state.baseUrl}/attempts/${field_attempt.attempt}/fields/${field_attempt.id}/`\n\n        try {\n            const response = await fetch(textFieldDetailUrl, {\n                method: \"patch\",\n                body: JSON.stringify({text: event.target.value}),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `JWT ${this.state.token}`\n                }\n            })\n            let data\n            if(response.ok)\n                data = await response.json()\n            else\n                throw new Error(\"Something went wrong\")\n\n            this.setState(prevState => ({\n                attempt: {\n                    ...prevState.attempt,\n                    fields: prevState.attempt.fields.map(field => {\n                        if(field.id === data.id)\n                            return data\n                        return field\n                    })\n                }\n            }))\n        }\n        catch(err)\n        {\n            alert(err)\n        }\n    }\n\n    async handleRadioAttemptChange(...args) {\n        const [ event, optionId, selOptionId, attFieldId, attemptId ] = args\n        const { checked } = event.target\n\n        try {\n            if(checked) {\n                const attOptListUrl = `${this.state.baseUrl}/attempts/${attemptId}/fields/${attFieldId}/options/`\n                const response = await fetch(attOptListUrl, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `JWT ${this.state.token}`\n                    },\n                    method: \"post\",\n                    body: JSON.stringify({ option: optionId })\n                })\n                if(!response.ok)\n                    throw new Error(\"Something went wrong while posting option\")\n                const data = await response.json()\n                this.setState(prevState => ({\n                    attempt: {\n                        ...prevState.attempt,\n                        fields: prevState.attempt.fields.map(attField => {\n                            const newOpts = attField.options\n                            newOpts.push(data)\n                            return {\n                                ...attField,\n                                options: newOpts\n                            }}\n                        )}\n                }))\n            }\n            else {\n                const attOptDetailUrl = `${this.state.baseUrl}/attempts/${attemptId}/fields/${attFieldId}/options/${selOptionId}/`\n                const response = await fetch(attOptDetailUrl, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `JWT ${this.state.token}`\n                    },\n                    method: \"delete\"\n                })\n                if(!response.ok)\n                    throw new Error(\"Something went wrong while deleting option\")\n\n                this.setState(prevState => ({\n                    attempt: {\n                        ...prevState.attempt,\n                        fields: prevState.attempt.fields.map(attField => {\n                            const newOpts = attField.options.filter(attOpt => attOpt.id !== selOptionId)\n                            return {\n                                ...attField,\n                                options: newOpts\n                            }\n                        })\n                    }\n                }))\n            }\n        }\n        catch(err) {\n            alert(err)\n        }\n    }\n\n    async handleDesignTextSubmit(args) {\n        try {\n            const { fieldType, text, formId } = args\n            const postFieldUrl = `${this.state.baseUrl}/forms/${formId}/fields/`\n            const response = await fetch(postFieldUrl, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `JWT ${this.state.token}`\n                },\n                method: \"post\",\n                body: JSON.stringify({ text: text, field: fieldType })\n            })\n\n            if(!response.ok)\n                throw new Error(\"Something went wrong while creating field in form\")\n\n            const data = await response.json()\n            this.setState(prevState => {\n                const newFields = prevState.form.fields\n                newFields.push(data)\n                return {\n                    form: {\n                        ...prevState.form,\n                        \"fields\": newFields\n                    }\n                }\n            })\n        }\n        catch(err) {\n            alert(err)\n        }\n    }\n\n    async handleDesignOptionSubmit(args) {\n        try {\n            const { fieldId, value, formId } = args\n            const postOptUrl = `${this.state.baseUrl}/forms/${formId}/fields/${fieldId}/options/`\n            const response = await fetch(postOptUrl, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `JWT ${this.state.token}`\n                },\n                method: \"post\",\n                body: JSON.stringify({ value: value })\n            })\n\n            if(!response.ok)\n                throw new Error(\"Something went wrong while creating option in form field\")\n\n            const data = await response.json()\n            this.setState(prevState => {\n                return {\n                    form: {\n                        ...prevState.form,\n                        \"fields\": prevState.form.fields.map(field => {\n                            if(field.id === fieldId){\n                                let newOptions = field.options\n                                newOptions.push(data)\n                                return {\n                                    ...field,\n                                    options: newOptions\n                                }\n                            }\n                            return field\n                        })\n                    }\n                }\n            })\n        }\n        catch(err) {\n            alert(err)\n        }\n    }\n\n    async handleFillInit(form) {\n        try {\n            const postAttempt = `${this.state.baseUrl}/attempts/`\n            const response = await fetch(postAttempt, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `JWT ${this.state.token}`\n                },\n                method: \"post\",\n                body: JSON.stringify({ form: form.id })\n            })\n\n            if(!response.ok)\n                throw new Error(\"Something went wrong while creating attempt\")\n\n            const data = await response.json()\n            this.setState(prevState => {\n                const newAttempts = prevState.attempts\n                newAttempts.push(data)\n                return { attempts: newAttempts }\n            })\n\n            this.handleReply(data)\n        }\n        catch(err) {\n            alert(err)\n        }\n    }\n\n    async handleFormCreate(params) {\n        try {\n            const postForm = `${this.state.baseUrl}/forms/`\n            const response = await fetch(postForm, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `JWT ${this.state.token}`\n                },\n                method: \"post\",\n                body: JSON.stringify(params)\n            })\n\n            if(!response.ok)\n                throw new Error(\"Something went wrong while creating the form\")\n\n            const data = await response.json()\n            this.setState(prevState => {\n                const newForms = prevState.forms\n                newForms.push(data)\n                return { forms: newForms }\n            })\n\n            this.handleDesign(data)\n        }\n        catch(err) {\n            alert(err)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <section className=\"hero is-primary\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title is-1\">Form Builder</h1>\n                            <h2 className=\"subtitle\">Build Forms and Fill Forms</h2>\n                        </div>\n                    </div>\n                </section>\n\n                <div className=\"columns\">\n                    <div className=\"column\">\n                        {\n                            this.state.isLoggedIn &&\n                            <div>\n                                <button\n                                    onClick={this.handleLogout}\n                                    className=\"button is-fullwidth\"\n                                >Logout {this.state.username}</button>\n\n                                <button\n                                    onClick={this.handleForms}\n                                    className=\"button is-fullwidth\"\n                                >Forms</button>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"column is-three-quarters\">\n                        <div>\n                            {\n                                !this.state.isLoggedIn &&\n                                <Login onSubmit={this.handleLogin}/>\n                            }\n                        </div>\n                        <div>\n                            {\n                                this.state.isLoggedIn && this.state.isForms &&\n                                <Forms\n                                    forms={this.state.forms}\n                                    attempts={this.state.attempts}\n                                    onLoad={this.getForms}\n                                    userId={this.state.user.id}\n                                    onDesign={this.handleDesign}\n                                    onReply={this.handleReply}\n                                    onView={this.handleView}\n                                    onFillInit={this.handleFillInit}\n                                    onFormCreate={this.handleFormCreate}\n                                />\n                            }\n                        </div>\n                        <div>\n                            {\n                                this.state.isLoggedIn && this.state.isDesign &&\n                                <Design\n                                    form={this.state.form}\n                                    onTextSubmit={this.handleDesignTextSubmit}\n                                    onOptionSubmit={this.handleDesignOptionSubmit}\n                                />\n                            }\n                        </div>\n                        <div>\n                            {\n                                this.state.isLoggedIn && this.state.isReply &&\n                                <Reply\n                                    attempt={this.state.attempt}\n                                    onTextChange={this.handleTextAttemptChange}\n                                    onRadioChange={this.handleRadioAttemptChange}\n                                />\n                            }\n                        </div>\n                        <div>\n                            {\n                                this.state.isLoggedIn && this.state.isView &&\n                                <View attempt={this.state.attempt} />\n                            }\n                        </div>\n                    </div>\n                    <div className=\"column\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}